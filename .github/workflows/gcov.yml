name: Run GCOV

on:
  push:

jobs:
  run-gcov:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4 
        with:
          ref: cfb125575a4c3a323998029fb148396eb1aac697

      - name: Install dependencies for project (Linux)
        if: runner.os == 'Linux'
        run: | 
          sudo apt-get update
          sudo apt-get install -y libtool-* meson nasm numa-* libass-dev libass9 yasm pkg-config intltool libbluray2 libbluray-dev libdvdread-* libdvdnav-* libmp3lame-dev libmp3lame0 libopus-dev libopus0 libsamplerate0 libsamplerate0-dev libtheora-dev libtheora0 libvorbis0a libvorbisenc2 libvorbis-dev libvorbisfile3 libvorbisidec-dev libvorbisidec1 libvpx-dev libvpx7 libx264-* libx265-* libxml2 libxml2-dev zlib1g zlib1g-dev
          
      - name: Build repository 
        run: | 
          set +e
          export CC=gcc
          export CXX=g++
          export CFLAGS="-fprofile-arcs -ftest-coverage -fPIC"
          export LDFLAGS="-fprofile-arcs -ftest-coverage -fPIC"
          ./configure --disable-gtk --launch-jobs=0 --launch
        continue-on-error: true
        
      - name: Run GCOV
        run: |
          #!/bin/bash
          set +e 

          mkdir gcovlogs
          echo "=========[GCOV Service Started!]========="

          DIRECTORY=.

          is_executable() {
            local file="$1"
            if file "$file" | grep -q 'ELF 64-bit'; then
              return 0
            else
              return 1
            fi
          }

          run_with_gcov() {
            local executable="$1"
            output="$("$executable" 2>/dev/null)"  # Suppress stderr
            local exit_status=$?
            
            if [ $exit_status -eq 124 ]; then
              echo "Command timed out after 10 seconds: $executable"
              return  # Skip gcov analysis on timeout
            fi
            
            gcov --all-blocks --branch-probabilities --branch-counts --display-progress --function-summaries --json-format -H --use-colors --demangled-names --unconditional-branches --verbose "$executable"
          }

          find "$DIRECTORY" -type f -executable | while read -r file; do
            if is_executable "$file"; then
              run_with_gcov "$file"
              echo ""
              echo "" 
              echo "" 
            fi
          done

          find . -name "*.gcov.json.gz" -exec sh -c 'gzip -dc "{}" > "gcovlogs/$(basename "{}" .gz)"' \;
          echo "=========[GCOV service finished]========="
  
      - name: Upload GCOV reports
        uses: actions/upload-artifact@v4
        with:
          name: gcov-report-${{ github.event.repository.name }}-on-${{ matrix.os }}
          path: './gcovlogs/*'
